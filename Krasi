Description:

Краси има един много дълъг масив. Той доста си го харесва, но търси
най-добрата му секция. За жалост масивът му е твърде дълъг и Краси не може
да го мине целия на ръка, затова той го прати на приятелите си, да го видят и
те и да кажат коя секция им харесва най-много.
Масивът на Краси се състои от цели числа от −1000 до 1000. Една негова
„секция“ ще наричаме непрекъсната последователност на елементите му от
позиция i до позиция j (включително позиции i и j). Ще дефинираме
добротата на една секция като сумата на елементите в нея. Краси обаче
изобщо не харесва нули и ако в някоя секция има повече от K на брой нули,
той изобщо не я харесва, независимо каква е сумата ѝ.
Вие също получихте масива на Краси, помогнете му, като напишете
програма, която намира сумата на елементите на най-добрата му секция.
Вход:
От първия ред се въвеждат две числа N и K – дължината на масива на Краси и
максималната бройка нули, които той ще толерира. От следващия ред се
въвеждат N числа – елементите на масива.
Изход:
Изкарайте едно число – търсената максимална сума на някоя секция от
масива която има не повече от K нули.
Ограничения:
0 < N <= 100 000
0 < K <= 100
Пример:
Вход: Изход:
13 2
2 3 0 5 0 -1 2 0 5 -2 1 0 6
12

Обяснение на примерния тест:
Секцията с до 2 нули, която има максимална сума, е от позиция 7 до края на
масива.

Solution:


#include <iostream>

int dp[101];
int array[100001];
int k, n;

void solve(int n, int k)
{
    int max = -1;
    for (int i = 0; i < n; ++i)
    {
        if (array[i] != 0)
        {
            for (int j = 0; j <= k; ++j)
            {
                if (i == 0)
                {
                    dp[j] = std::max(0, array[i]);
                }
                else
                {
                    dp[j] = std::max(0, dp[j] + array[i]);
                }
            }
        }
        else
        {
            for (int j = k; j >= 1; j--)
            {
                dp[j] = dp[j - 1];
            }

            dp[0] = 0;
        }

        max = std::max(dp[k], max);
    }

    printf("%d", max);
}

int main()
{
    scanf("%d %d", &n, &k);
    for (int i = 0; i < n; ++i)
    {
        scanf("%d", &array[i]);
    }

    solve(n, k);
    return 0;
}
